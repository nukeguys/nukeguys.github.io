{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","description":"about development, life and something.","siteUrl":"https://nukeguys.github.io/"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"https://www.robertwalters.co.kr/career-advice/interview-questions-to-ask.html…","html":"<p><a href=\"https://www.robertwalters.co.kr/career-advice/interview-questions-to-ask.html\">https://www.robertwalters.co.kr/career-advice/interview-questions-to-ask.html</a></p>\n<h3>현재 직책이 시장에 나오게 된 이유는 무엇인가요?</h3>\n<p>지원한 직책이 시장에 나오게 된 계기를 이해하는 것은 굉장히 중요합니다. 대게는 이전 재직자가 퇴사하게 되었거나 회사의 성장으로 인해 새롭게 만들어진 자리일 수 있습니다. 이렇게 직책이 만들어지게 된 이유에 대해 질문하는 것을 통해 회사의 경영 사정 및 성장에 대한 기대치와 방향을 확인 할 수 있고, 면접관의 대답에 따라 자신에게 해당되는 필요한 기술 및 경력을 강조할 수 있습니다.</p>\n<p>만약 지원한 포지션이 새롭게 만들어진 자리라면 자신이 제공할 수 있는 혁신과 주도권에 초점을 맞추고, 이전 멤버를 교체하는 경우에는 기존 회사에 있는 프로세스를 개발하고 개선하는 능력을 강조하며 면접에 임할 수 있습니다.</p>\n<h3>이 회사에서 일하면 좋은 점은 무엇인가요 ?</h3>\n<p>회사에서 이미 몸담고 일하고 있는 면접관에게 이 질문을 던지는 것을 통해 회사의 기업문화나 전반적인 분위기에 대해 알아 볼 수 있고 그러한 분위기가 자신이 원하는 것과 적합한지 판단해 볼 수 있습니다. 지원자는 면접을 통해 면접관에게 자신이 지원한 직무에 적합한 사람임을 알리는 것도 중요하지만 다니게 될 회사에서의 자신의 위치 혹은 기업문화와 자신의 성격이 융화될 수 있는 지 등 업무 외적의 요소도 고려하고 있음을 보여줘야 하기 때문입니다.</p>\n<p>만약 이때 면접관이 회사의 일하는 문화에 대해 어떻게 생각하는지에 대해 관심보이며 질문을 던진다면 당신이 직무를 뛰어 넘어 회사의 구성원으로서의 역할도 중요하게 여김을 효과적으로 보여줄 수 있습니다.</p>\n<h3>해당 직책에서 성과가 측정되는 기준은 무엇인가요?</h3>\n<p>앞으로 맡게 될 직무의 성공을 측정하는 방법을 이해하는 것이 중요한데, 이때 과거에 있었던 성공사례를 예를 들어 뒷받침한다면 보다 효과적으로 자신의 능력을 면접관에게 어필할 수 있습니다.</p>\n<p>성과 측정기준에 대한 이해를 바탕으로 사업이 운영되는 각기 다른 방법을 파악할 수 있고, 이에 따라 회사가 직원들과 소통하는 방법 및 사업 접근 방법을 엿볼 수 있는 데, 이 접근 방식이 자신에게도 적합한 지 판단하는 데 유용합니다.</p>\n<h3>커리어 개발 및 지원과 관련해 회사에 기대할 수 있는 점은 무엇인가요?</h3>\n<p>이 질문을 통해 지원자는 자신이 회사와 함께 오랜 기간 함께하며 배우고 성장하고 싶다는 것을 면접관에게 알릴 수 있습니다. 또한 개인적인 커리어를 위해서도 장기적으로 자신이 원하는 바를 회사가 제공할 수 있는 지 여부를 알아볼 수 있습니다.</p>\n<p>많은 고용주들이 점차적으로 후보자들이 회사에서의 커리어 개발 및 진로에 두는 중요성이 커지는 것을 인식하고 있고, 그 중 대다수의 회사들이 직원들에게 그러한 지원을 제공하는 것을 긍정적으로 여기고 있습니다. 자신의 커리어 목표를 간략히 요약하고 회사가 잠재적으로 후보자를 성공으로 이끌 수 있는 방법을 이해시킨다면 면접관에게 자신이 회사에 신뢰를 바탕으로 헌신으로 일할 준비가 되어있고, 장기적인 투자가 될 수 있다는 확신을 심어줄 수 있습니다.</p>\n<h3>해당 직무의 조직에서의 역할은 무엇인가요?</h3>\n<p>이 질문을 통해 자신이 지원한 직무의 조직에서의 역할과 팀과 상호작용하는 방식을 이해할 수 있고, 어떻게 조직에서 팀과 발전할 수 있는 기회를 얻을 수 있는지 파악해 볼 수 있습니다.</p>\n<p>또한 이 질문을 함으로서 후보자가 조직에 대한 지식과 이해를 바탕으로 개인적인 성공 뿐아니라 조직의 성공에 기여하는 데 관심이 있으며, 직장 동료들과의 협력을 중요하게 생각한다는 것도 면접관에게 보여줄 수 있습니다.</p>\n<h3>면접 후 다음 단계는 무엇이고, 어떻게 진행되나요?</h3>\n<p>이 마지막 질문은 많은 지원자들이 쉽게 잊어 버리곤 하지만 면접관에게 자신이 다음 단계에 대해 생각했으며 어떤것을 준비해야 되는 지 고민을 해보았음을 보여줄 수 있는 굉장히 중요한 질문입니다.</p>\n<p>이때 기억해야 할 점은 면접을 통해 자신이 조직에 적합한지 알아 보는 것 뿐 아니라 직무를 수행할 수 있는 능력이 있다고 자신할 수 있고 성공적인 경력이동이 될 것이라는 확신이 드는 지를 확인할 수 있도록 해야 합니다.</p>","fields":{"slug":"/면접에서-물어봐야-할-질문/"},"frontmatter":{"date":"2018/12/11","title":"면접에서 물어봐야 할 질문","description":"면접시 면접관에게 물어봐야 할 질문들","tags":["면접","질문"]}}},{"node":{"excerpt":"program(=binary) 실행가능한 코드 or 파일 process vs thread 싱글 프로세스는 프로세스가 곧 스레드. 둘 다 cpu 스케쥴링 단위이며, 프로세스는 독립된 자원(메모리 등)을 갖고 스레드는 공유한다는 점이 차이 process…","html":"<h2>program(=binary)</h2>\n<p>실행가능한 코드 or 파일</p>\n<h2>process vs thread</h2>\n<p>싱글 프로세스는 프로세스가 곧 스레드. 둘 다 cpu 스케쥴링 단위이며, 프로세스는 독립된 자원(메모리 등)을 갖고 스레드는 공유한다는 점이 차이</p>\n<h2>process</h2>\n<p>실행중인(memory<sup id=\"fnref-memory\"><a href=\"#fn-memory\" class=\"footnote-ref\">memory</a></sup>에 적재된) 프로그램</p>\n<p>메모리에 적재된 바이너리 이미지와 가상화 된 메모리 인스턴스, 열린 파일 같은 커널 리소스, 관련된 사용자 정보와 같은 보안 정보와 하나 이상의 스레드를 포함</p>\n<p>프로세스는 fork로 생성되어 execve로 실행 되며 exit로 종료하고 wait로 소멸</p>\n<h3>cow(copy-on-write)</h3>\n<p>fork()를 통해 프로세스를 생성하면 메모리의 복사를 수행하는데, 이 때 fork() 직 후에 모든 메모리를 복사하지 않고 실제 해당 메모리<sup id=\"fnref-memory\"><a href=\"#fn-memory\" class=\"footnote-ref\">memory</a></sup>에 write작업 발생하는 경우에 복사를 수행하는 지연 최적화(lazy optimizatino)</p>\n<p>fork() 이후 자식 프로세스가 새로운 바이너리를 실행하면 이전의 주소 공간은 불필요해지고 copy on write는 이런 경우를 최적화</p>\n<h3>orphaned vs zombie process</h3>\n<p>orpahaned(고아) process : 자식 프로세스가 종료하기 전에 부모 프로세스가 수행을 마친 경우의 자식 프로세스, 커널은 자식 프로세스를 찾아 init프로세스<sup id=\"fnref-init\"><a href=\"#fn-init\" class=\"footnote-ref\">init</a></sup>의 자식이 되도록 설정</p>\n<p>zombie(좀비) process : 종료했으나 부모 프로세스에서 종료코드를 읽어가지 않은(wait()을 호출하지 않은) 프로세스, init 프로세스는 차례대로 주기적으로 자식 프로세스에 대해 wait() 호출을 통해 지속적인 좀비 상태를 방지</p>\n<h3>process 그룹</h3>\n<p>하나 이상의 프로세스들의 집합으로 일관된 작업을 하는 프로세스들</p>\n<p>프로세스 그룹 리더의 pid가 그룹 ID, 리더는 그룹 내의 프로세스를 생성, 종료 가능</p>\n<p>프로세스 그룹의 마지막 프로세스가 그룹을 떠날 때 까지 그룹 유지</p>\n<h3>process 세션</h3>\n<p>하나 이상의 프로세스 그룹들의 집합으로 보통 동일한 터미널에서 수행되고 있는 프로세스 그룹들</p>\n<p>세션 리더의 pid가 세션 ID</p>\n<h3>병행성 vs 병렬성</h3>\n<p>병행성(multiprogramming) : 하나의 core에 여러 프로세스가 실행 됨(scheduling)</p>\n<p>병렬성(multiprocessing) : 두 개 이상의 core에서 프로세스가 실행 됨</p>\n<h3>scheduling(linux)</h3>\n<p>1세대(round robin) : 리스트 기반으로 우선순위가 높은 프로세스를 찾는데 O(n) 성능</p>\n<p>2세대(bitmap) : Bitmap과 hash를 이용 우선순위가 높은 프로세스를 찾는데 O(1) 성능을 보이지만 공정하지 않음</p>\n<p>3세대(CFS) : time slice대신 CPU시간을 할당해서 공정하게 스케줄링</p>\n<h3>IPC</h3>\n<p>프로세스간 resource와 information을 공유</p>\n<p><strong>signal</strong></p>\n<p>비동기 이벤트 처리를 위한 메커니즘을 제공하는 소프트웨어 인터럽트</p>\n<p><strong>pipe</strong></p>\n<p>프로세스간 단 방향 통신 방법</p>\n<p>한 프로세스의 표준 출력을 다른 프로세스의 표준 입력에 연결</p>\n<p><strong>message queue</strong></p>\n<p>메시지 큐를 이용한 메시지 전달</p>\n<p><strong>semaphore</strong></p>\n<p>프로세스간 동기화에 사용</p>\n<p>mutext와 비슷하나 갯수가 하나 이상일 수 있다는 점이 차이</p>\n<p><strong>shared memory</strong></p>\n<p>대용량이며 빠른 메시지 전달</p>\n<h2>thread(=LWP)</h2>\n<p>프로세스 내 실행 단위, 가상 메모리를 공유하는 프로세스(parent의 가상 메모리 맵을 공유)</p>\n<p>각각의 스레드는 저마다의 가상화된 프로세스를 가지고 있으며 여기에는 스택과 레지스터, 명령어 포인터 같은 프로세서의 상태가 포함</p>\n<h3>race condition</h3>\n<p>공유 리소스에 동기화되지 않은 둘 이상의 스레드가 접근하여 프로그램의 오동작을 유발하는 상황</p>\n<h3>critical section</h3>\n<p>race condition이 발생할 수 있기 때문에 동기화가 되어야 하는 영역</p>\n<h3>동기화</h3>\n<p><strong>mutex</strong></p>\n<p>lock을 이용해 상호 배제(mutual exclusion)를 구현. critical sectin 진입시 한 번에 하나의 스레드만 락을 걸 수 있고 실행이 끝나면 해제, 나머지 스레드는 얻을 때 까지 대기.(=binary semaphore)</p>\n<p><strong>deadlock</strong></p>\n<p>두 스레드가 서로 상대방이 끝나기를 기다리고 있어 결국 둘 다 끝나지 못하는 상태</p>\n<p>아래 4가지 조건을 모두 만족해야 발생</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">상호 배제(Mutual Exclusion) : 자원은 한 번에 한 프로세스만 사용 가능\n점유 대기(Hold and Wait) : 최소한 하나의 자원을 점유하고 있으면서, 다른 프로세스에 할당되어 사용되고 있는 자원을 추가로 점유하기 위해 대기하는 프로세스가 있어야 함\n비선점 (No Preemption) : 다른 프로세스에 할당된 자원은 사용이 끝날 때 까지 강제로 빼앗을 수 없다.\n순환 대기(Circular Wait) : 프로세스의 집합 P0...Pn에서 p(n-1)은 pn이 점유한 자원을 대기하며 Pn은 P0가 점유한 자원을 요구해야 한다.</code></pre></div>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-memory\">\n<p>text(code), data(전역/정적 변수), heap, stack, bss(초기화되지 않은 전역변수)</p>\n<a href=\"#fnref-memory\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-init\">\n<p>pid가 1인 system에서 가장 먼저 실행되는 프로세스</p>\n<a href=\"#fnref-init\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","fields":{"slug":"/Tech-Interview-OS/"},"frontmatter":{"date":"2018/12/04","title":"Tech Interview - OS","description":"기술 면접대비 - OS","tags":["interview","os"]}}},{"node":{"excerpt":"Python Study 최신  python 버전 3.7로  jump to python 내용으로 학습 후  HackerRank 와 병행 HackerRank 30 Days of Code(1일 1문제) Interview Preparation Kit(6…","html":"<h2>Python Study</h2>\n<p>최신 <a href=\"https://www.python.org/\">python</a>버전 3.7로 <a href=\"https://wikidocs.net/book/1\">jump to python</a>내용으로 학습 후 <a href=\"https://www.hackerrank.com\">HackerRank</a>와 병행</p>\n<h3>HackerRank</h3>\n<p>30 Days of Code(1일 1문제)<br>\nInterview Preparation Kit(65문제) > Cracking the Coding Interview(20문제) > Problem Solving<br>\n다음날 복습할 겸 정리해서 posting.</p>\n<p>Project - ”<a href=\"https://wikidocs.net/book/110\">파이썬으로 배우는 알고리즘 트레이딩</a>” 예제로 진행</p>\n<h3>Schedule</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Date</th>\n<th>Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>2018.07.01</td>\n<td>준비: Python 설치, 교재 구매(복습/보관용)<br /><strong>Jump to python</strong><br /><a href=\"https://wikidocs.net/2\">00장 들어가기전에</a><br /><a href=\"https://wikidocs.net/5\">01장 파이썬이란 무엇인가?</a></td>\n</tr>\n<tr>\n<td>2</td>\n<td>2018.07.02</td>\n<td><strong>Jump to python</strong><br /><a href=\"https://wikidocs.net/11\">02장 파이썬 프로그래밍의 기초, 자료형</a><br /><a href=\"https://wikidocs.net/19\">03장 프로그램의 구조를 쌓는다! 제어문</a><br /><a href=\"https://wikidocs.net/23\">04장 프로그램의 입력과 출력은 어떻게 해야 할까?</a><br /><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-hello-world/problem\">Day 0: Hello, World</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/arrays/challenges\">Arrays</a> - <a href=\"https://nukeguys.github.io/2018/07/03/HackerRank-InterViewPreparationKit-Array/\">풀이</a></td>\n</tr>\n<tr>\n<td>3</td>\n<td>2018.07.03</td>\n<td><strong>Jump to python</strong><br /><a href=\"https://wikidocs.net/27\">05장 파이썬 날개달기</a><br /><strong>Review - 책</strong><br />01장 파이썬이란 무엇인가?<br />02장 파이썬 프로그래밍의 기초, 자료형<br /><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-data-types/problem\">Day 1:Data Types</a></td>\n</tr>\n<tr>\n<td>4</td>\n<td>2018.07.04</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-operators/problem\">Day 2:Operators</a><br /><a href=\"https://nukeguys.github.io/2018/07/04/Tech-Interview-OS/\"><strong>Tech Interview - OS</strong></a></td>\n</tr>\n<tr>\n<td>5</td>\n<td>2018.07.05</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-conditional-statements/problem\">Day 3:Intro to Conditional Statements</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/sorting/challenges\">Sort</a> - <a href=\"https://nukeguys.github.io/2018/07/05/HackerRank-InterVIewPreparationKit-Sorting/\">풀이</a><br /><strong>J-2</strong></td>\n</tr>\n<tr>\n<td>6</td>\n<td>2018.07.06</td>\n<td><strong>Jump to python</strong><br /><a href=\"https://wikidocs.net/27\">05장 파이썬 날개달기</a><br /><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-class-vs-instance/problem\">Day 4:Class vs. Instance</a></td>\n</tr>\n<tr>\n<td>7</td>\n<td>2018.07.07</td>\n<td><strong>Jump to python</strong><br /><a href=\"https://wikidocs.net/34\">06장 파이썬 프로그래밍, 어떻게 시작해야 할까?</a><br /><a href=\"https://wikidocs.net/41\">B.부록</a><br /><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-loops/problem\">Day 5:Loops</a><br /><strong>Codility</strong><br />Lesson1.Iterations<br />Lesson2.Arrays<br />Lesson3.Time Complexity<br />Lesson4.CountingElements<br />Lesson5.Prefix Sums<br />Lesson6.Sorting</td>\n</tr>\n<tr>\n<td>8</td>\n<td>2018.07.08</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-review-loop/problem\">Day 6:Let’s Review</a><br /><strong>Codility</strong><br />Lesson7.Stacks and Queues</td>\n</tr>\n<tr>\n<td>9</td>\n<td>2018.07.09</td>\n<td><strong>Review - 책</strong><br />02장 파이썬 프로그래밍의 기초, 자료형<br /><strong><br />HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-arrays/problem\">Day 7:Arrays</a><br /><strong>Codility</strong><br />Lesson8.Leader<br /><strong>A-Codility(3, 155min)</strong></td>\n</tr>\n<tr>\n<td>10</td>\n<td>2018.07.10</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-dictionaries-and-maps/problem\">Day 8:Dictionaries and Maps</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/dictionaries-hashmaps/challenges\">Dictionaries and Hashmaps</a> - <a href=\"https://nukeguys.github.io/2018/07/10/HackerRank-InterViewPreparationKit-Dictionaries-and-hashmaps/\">풀이</a><br /><strong>Codility</strong><br />Lesson9.Maximum slice problem</td>\n</tr>\n<tr>\n<td>11</td>\n<td>2018.07.11</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-recursion/problem\">Day9:Recursion</a><br />Python : Introduction, Basic Data Types<br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/strings/challenges\">String Manipulation</a> - <a href=\"https://nukeguys.github.io/2018/07/11/HackerRank-InterviewPreparationKit-StringManipulation/\">풀이</a></td>\n</tr>\n<tr>\n<td>12</td>\n<td>2018.07.12</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-binary-numbers/problem\">Day10:Binary Numbers</a><br /><strong>A-1</strong></td>\n</tr>\n<tr>\n<td>13</td>\n<td>2018.07.13</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-2d-arrays/problem\">Day11:2D Arrays</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/strings/challenges\">String Manipulation</a> - <a href=\"https://nukeguys.github.io/2018/07/11/HackerRank-InterviewPreparationKit-StringManipulation/\">풀이</a><br />Python : Strings</td>\n</tr>\n<tr>\n<td>14</td>\n<td>2018.07.14</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-inheritance/problem\">Day12:Inheritance</a><br />Python : Strings</td>\n</tr>\n<tr>\n<td>15</td>\n<td>2018.07.15</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-abstract-classes/problem\">Day13:Abstract Classes</a><br />Python : Strings</td>\n</tr>\n<tr>\n<td>16</td>\n<td>2018.07.16</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-scope/problem\">Day14:Scope</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/challenges/greedy-florist/problem\">Greedy Florist</a> - <a href=\"\">풀이</a><br /><strong>Jump to python</strong><br /><a href=\"https://wikidocs.net/1669\">07장 유용한 파이썬 도구들</a></td>\n</tr>\n<tr>\n<td>17</td>\n<td>2018.07.17</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-linked-list/problem\">Day15:Linked List</a><br /><strong>파이썬으로 배우는 알고리즘 트레이딩</strong><br />00. 들어가기 전에 ~ 07. 파일 다루기</td>\n</tr>\n<tr>\n<td>18</td>\n<td>2018.07.18</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-exceptions-string-to-integer/problem\">Day16:Exceptionis - String to Integer</a><br /><strong>파이썬으로 배우는 알고리즘 트레이딩</strong><br />08. 실전 프로젝트<br />09. 파이썬과 COM<br />12. 키움증권 API</td>\n</tr>\n<tr>\n<td>19</td>\n<td>2018.07.19</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-more-exceptions/problem\">Day17:More Exceptions</a><br /><strong>Interview</strong><br /><a href=\"https://nukeguys.github.io/2018/07/19/8%ED%8D%BC%EC%84%BC%ED%8A%B8-%EB%A9%B4%EC%A0%91%EB%AC%B8%EC%A0%9C/\">8퍼센트 면접 문제 - pingpong</a></td>\n</tr>\n<tr>\n<td>20</td>\n<td>2018.07.20</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-queues-stacks/problem\">Day18:Queues and Stacks</a></td>\n</tr>\n<tr>\n<td>21</td>\n<td>2018.07.21</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-interfaces/problem\">Day19:Interface</a></td>\n</tr>\n<tr>\n<td>22</td>\n<td>2018.07.22</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-sorting/problem\">Day20:Sorting</a></td>\n</tr>\n<tr>\n<td>23</td>\n<td>2018.07.23</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-generics/problem\">Day21:Generics</a> - not python<br /><strong>Codility</strong><br /><a href=\"http://nukeguys.tistory.com/category/Algorithm/codility\">문제풀이 정리</a><br /><strong>8-1</strong></td>\n</tr>\n<tr>\n<td>24</td>\n<td>2018.07.24</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-binary-search-trees/problem\">Day22:Binary Search Trees</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/search/challenges\">Search</a><br /><strong>Codility</strong><br /><a href=\"http://nukeguys.tistory.com/category/Algorithm/codility\">문제풀이 정리</a></td>\n</tr>\n<tr>\n<td>25</td>\n<td>2018.07.25</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-binary-trees/problem\">Day23:BST Level-Order Traversal</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/search/challenges\">Search</a><br /><strong>파이썬으로 배우는 알고리즘 트레이딩</strong><br />13. Pandas를 이용한 데이터 분석 기초</td>\n</tr>\n<tr>\n<td>26</td>\n<td>2018.07.26</td>\n<td><strong>HackerRank</strong><br />30 Days of Code : <a href=\"https://www.hackerrank.com/challenges/30-linked-list-deletion/problem\">Day24:More Linked Listl</a><br />Interview Preparation : <a href=\"https://www.hackerrank.com/interview/interview-preparation-kit/search/challenges\">Search</a><br /><strong>파이썬으로 배우는 알고리즘 트레이딩</strong><br />14. Pandas와 zipline을 이용한 백테스팅</td>\n</tr>\n</tbody>\n</table>","fields":{"slug":"/Python-Study/"},"frontmatter":{"date":"2018/12/02","title":"Python Study","description":"Life is too short, You need python.","tags":["python","study","hackerrank","jumptopython","codility"]}}}]}},"pageContext":{}}