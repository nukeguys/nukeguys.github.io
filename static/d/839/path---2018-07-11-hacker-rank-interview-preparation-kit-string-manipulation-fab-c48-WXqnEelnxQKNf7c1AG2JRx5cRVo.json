{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","author":"nukeguys"}},"markdownRemark":{"id":"4bb9011e-985e-58af-af88-816bba69bb82","excerpt":"Sherlock and Valid String - medium 입력 string s의 각 문자의 개수가 동일하거나 문자 하나만 제거해서 모두 동일해지면 ‘YES’아니면 ‘NO’ 리턴 (1<= | s | <=10^5) 각 문자의 개수를 센다음 위 조건이 맞는지 판단 Special…","html":"<h2>Sherlock and Valid String - medium</h2>\n<p><code class=\"language-text\">문제요약</code></p>\n<p>입력 string s의 각 문자의 개수가 동일하거나 문자 하나만 제거해서 모두 동일해지면 ‘YES’아니면 ‘NO’ 리턴 (1&#x3C;=|s|&#x3C;=10^5)</p>\n<p><code class=\"language-text\">Sample Input</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">aabbcd</code></pre></div>\n<p><code class=\"language-text\">Sample output</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">NO</code></pre></div>\n<p><code class=\"language-text\">풀이</code></p>\n<p>각 문자의 개수를 센다음 위 조건이 맞는지 판단</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">isValid</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dic <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n    countDic <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>v <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>countDic<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'NO'</span>\n    <span class=\"token keyword\">elif</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>countDic<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'YES'</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        numOfOne <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> countDic<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> v <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> numOfOne <span class=\"token operator\">=</span> k\n        <span class=\"token keyword\">if</span> numOfOne <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">or</span> numOfOne<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">in</span> countDic<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'YES'</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'NO'</span></code></pre></div>\n<h2>Special Palindrome Again - medium</h2>\n<p><code class=\"language-text\">문제요약</code></p>\n<p>입력 string의 substring 중 palindromic string의 갯수(1&#x3C;=|s|&#x3C;=10^6)</p>\n<p>palindromic string : 전체가 모두 같은 글자, 가운데 글자를 제외하고 모두 같은 글자</p>\n<p><code class=\"language-text\">Sample Input</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">5\nasasd</code></pre></div>\n<p><code class=\"language-text\">Sample output</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">7</code></pre></div>\n<p><code class=\"language-text\">풀이</code></p>\n<p>처음엔 홀수인 경우와 짝수인 경우를 나눠서 일일이 계산</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">substrCount</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    palindrom <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        palindrom <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        width <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> i <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">and</span> i <span class=\"token operator\">!=</span> n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            ch <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">while</span> i<span class=\"token operator\">-</span>width <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">and</span> i<span class=\"token operator\">+</span>width <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> ch <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>width<span class=\"token punctuation\">]</span> <span class=\"token operator\">or</span> ch <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span>width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            palindrom <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            width <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">continue</span>\n        palindrom <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        width <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        ch <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">while</span> i<span class=\"token operator\">-</span>width <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">and</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>width <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> ch <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>width<span class=\"token punctuation\">]</span> <span class=\"token operator\">or</span> ch <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>width<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            palindrom <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            width <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> palindrom</code></pre></div>\n<p>하지만 문자 갯수를 세면 좀 더 빠르게 구할 수 있다. 예로 aabaa 인 경우 a=2 b=1 a=2가 되고 모두 같은 경우는 길이가 n일 때 n*(n+1)/2가 된다. 즉 3+1+3=7(a, a, aa, b, a, a, aa) 가운데만 다른 경우는 갯수가 1인 문자의 양쪽 문자가 같은 경우 더 짧은 길이 만큼이 된다. b=1이고 양쪽다 a이므로 2(aba, aabaa). 둘을 더해주면 전체 palindromic string의 갯수가 나온다. (discussions을 보고 알았다…)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">substrCount</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    counter <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    ch <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> ch<span class=\"token punctuation\">:</span>\n            count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            counter<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            ch <span class=\"token operator\">=</span> c\n            count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    counter<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    palindrom<span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> counter<span class=\"token punctuation\">:</span>\n        palindrom <span class=\"token operator\">+=</span> v<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> counter<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> counter<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> counter<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            palindrom <span class=\"token operator\">+=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>counter<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> counter<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> palindrom</code></pre></div>\n<h2>Common Child - medium</h2>\n<p><code class=\"language-text\">문제요약</code></p>\n<p>두 string에서 각각 0개 이상의 문자를 지웠을 때 서로 같아지는 string의 최대 길이 계산</p>\n<p>LCS(최장 공통 부분 수열) 문제</p>\n<p><code class=\"language-text\">Sample Input</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HARRY\nSALLY</code></pre></div>\n<p><code class=\"language-text\">Sample output</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<p><code class=\"language-text\">풀이</code></p>\n<p>discussion을 보고 이해했다. 알고리즘에서는 고전에 속하는 내용인 듯 하다.</p>\n<p>주어진 두 문자열(s1, s2)에서 일부를 지웠을 때의 최장 공통 부분 수열을 계산한다. 자세한 설명은 <a href=\"https://ko.wikipedia.org/wiki/%EC%B5%9C%EC%9E%A5_%EA%B3%B5%ED%86%B5_%EB%B6%80%EB%B6%84_%EC%88%98%EC%97%B4\">최장 공통 부분 수열</a>을 참고하면 이해하기 쉽다. 결국 DP 문제로 어떤 위치(s1[i],s2[j]) 까지의 최장 공통 부분 수열을 고려할 때, s1[i] == s2[j]라면 LCS(s1[i], s2[j])는 LCS(s1[i-1], s2[j-1])+s1[i]와 같다. 만약 s1[i] != s2[j]라면 LCS(s1[i], s2[j])는 max(LCS(s1[i-1],s2[j]), LCS(s1[i], s2[j-1]))과 같다. 길이가 0인 경우는 빈 문자열이 되고, s1 * s2 배열에서 위 조건에 맞게 계산을 하면 마지막 계산된 값이 두 문자열의 LCS가 된다.</p>\n<p>알고리즘을 알고 나면 구현은 어렵지 않은 문제로, 두 문자열의 길이를 n,m이라고 하면 O(n+m)의 시간과 공간을 사용한다. python3에서는 time out이 발생하고, pypy3로 pass된다.</p>\n<p>비슷한 문제로 <a href=\"https://en.wikipedia.org/wiki/Longest_common_substring_problem\">최장 공통 부분 문자열</a>도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">commonChild</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    lcs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> s1<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>s2<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                lcs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> lcs<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                lcs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>lcs<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> lcs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> lcs<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"HackerRank Interview Preparation Kit > String Manipulation","date":"July 11, 2018","tags":["python","study","hackerrank","string"],"description":"HackerRank의 Interview Preparation Kit > String Manipulation의 Medium 이상 문제"}}},"pageContext":{"slug":"/2018-07-11-HackerRank-InterviewPreparationKit-StringManipulation/","previous":{"fields":{"slug":"/2018-07-16-HackerRank-InterviewPreparationKit-Greedy/"},"frontmatter":{"title":"HackerRank Interview Preparation Kit > Greedy"}},"next":null}}