{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","author":"nukeguys"}},"markdownRemark":{"id":"c44adf3f-a21d-51cc-8f5a-9125d78d9f8e","excerpt":"Portfolio 정리할 겸 찾아보다가 마침 이전부터 찾던 geek스러운( GitHub를 통해 운영, MarkDown으로 작성, Theme Customizing  등) blog를 GitHub…","html":"<p>Portfolio 정리할 겸 찾아보다가 마침 이전부터 찾던 geek스러운(<em>GitHub를 통해 운영, MarkDown으로 작성, Theme Customizing</em> 등) blog를 GitHub을 통해 운영할 수 있다는 것을 알게 되어, 개발도 손놓지 않고 이어갈 겸 만들어 보기로 했다. 아직 좀 더 욕심이 나지만 일단 운영 수준으로는 만들어 진 것 같다. 하루 종일 삽질하면서 해본 내용들을 정리해서 첫 글로 posting 해본다.</p>\n<h2>설치 (<a href=\"https://jekyllrb-ko.github.io/docs/installation\">https://jekyllrb-ko.github.io/docs/installation</a>)</h2>\n<p>Jekyll은 공식적으로 windows를 지원하지 않는듯하니 mac이나 linux 기반으로 진행하는게 편할 듯한다.\n(이후는 macOS에서 진행과정)</p>\n<h3>Ruby 설치</h3>\n<p>Jekyll은 <code class=\"language-text\">RubyGem</code>으로 ruby가 먼저 설치되어야 한다. (<code class=\"language-text\">RubyGem</code>은 ruby의 library정도로 이해, rails는 framework)<br>\n최신 macOS(High Sierra 10.13)에는 ruby가 포함되어 있어 필요없지만, 이전 버전에서는 Homebrew를 통해 별도로 설치를 해야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 설치</span>\n/usr/bin/ruby -e <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">curl</span> -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install<span class=\"token variable\">)</span></span>\"</span>\nbrew <span class=\"token function\">install</span> ruby\n<span class=\"token comment\"># 버전확인</span>\nruby -v\nruby 2.5.1p57 <span class=\"token punctuation\">(</span>2018-03-29 revision 63029<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span>x86_64-darwin17<span class=\"token punctuation\">]</span></code></pre></div>\n<h3>Jekyll 설치</h3>\n<p>플러그인과 테마를 위와 <code class=\"language-text\">Bundler</code>와 함께 <code class=\"language-text\">Jekyll</code>을 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">gem <span class=\"token function\">install</span> bundler jekyll</code></pre></div>\n<p>설치 후 직접 <code class=\"language-text\">jekyll new jekyll-website</code> command를 통해 기본 블로그 테마를 설치하거나, <code class=\"language-text\">bundle init</code>, <code class=\"language-text\">bundle add keyll</code>, <code class=\"language-text\">bundle install</code>을 통해 하나씩 직접 설정도 가능하다. 그러나 web에 익숙치 않고 blog가 목적이기 때문에 이 부분은 패스하고 theme를 통해 쉽게 만들어 본다.</p>\n<h3>GitHub 설정</h3>\n<p>GitHub Pages를 운영하는 방법도 크게 두 가지로 나뉜다. Pages용 repository를 만들어서 관리하거나, 각 project(repository)별로 branch를 두고 별도로 운영할 수 있다. 난 간단하게 전용 repository를 만들어서 시작했다.\nGitHub에 로그인한 다음 repository를 생성해서 이름을 <code class=\"language-text\">[id]/[id].github.io</code>로 만들어 주면 자동으로 pages가 활성화된다. (setting에서 아래처럼 표시된다.)\n<img src=\"/assets/images/2018-05-29-github-setting.png\" alt=\"생성 후 활성화면\">\n설정은 끝났으나 아직 표시할 내용이 없기 때문에 접속을 해도 표시되지 않는다. 확인을 해보려면 해당 repository를 clone해서 간단한 html을 작성 후 올리고 접속해보면 표시되는 것을 알 수 있다. 여기에 jekyll을 사용하면 github을 통해 blog를 hosting할 수 있게 된다.</p>\n<h2>Theme 적용 &#x26; Configuration</h2>\n<h3>Theme 적용</h3>\n<p>위에서 언급한 대로 직접 한땀한땀 만들어 갈 수도 있지만, 이미 만들어진 훌륭한 theme를 사용하면 손쉽게 초기 설정을 할 수 있다. setting에서 선택할 수 있는 theme도 있고, 추가로 GitHub에 많은 theme(<a href=\"https://github.com/topics/jekyll-theme\">jekyll-theme</a>)들이 있다. 난 가장 인기가 많은 <a href=\"https://github.com/mmistakes/minimal-mistakes\">minimal-mistatkes</a>라는 theme로 선택했다.<br>\nTheme를 결정했다면 가장 손 쉬운 방법은 fork하는 것이다. 해당 project를 fork해서 내 GitHub으로 가져온 다음 repository의 이름을 위에서처럼 <code class=\"language-text\">[id]/[id].github.io</code>로 변경해준다. 그리고 나서 접속하면 해당 theme가 보이게 된다.(혹 경로 등의 문제가 발생할 수 있다.)<br>\n나는 <a href=\"https://junhobaik.github.io/jekyll-apply-theme/\">Jekyll 블로그 테마 적용하기</a>를 참고해서 해당 project의 최신 release 버전을 zip파일로 내려 받은 후 압축을 풀어서 내 repository에 올렸다. 이 때 불필요한 파일들은 지워주고, <code class=\"language-text\">docs</code> 디렉토리에는 참고할 만한 내용들이 많아서 별도로 보관하고 있다. (자세한 내용과 추가 작업은 링크된 블로그 참고)\n<img src=\"/assets/images/2018-05-29-local-repository.png\" alt=\"local repository\"></p>\n<h3>Configuration</h3>\n<p>Jekyll에 <code class=\"language-text\">_config.yml</code>파일을 통해 전역적인 설정이나 default값들을 미리 설정 할 수 있다. (<a href=\"https://jekyllrb-ko.github.io/docs/configuration/\">https://jekyllrb-ko.github.io/docs/configuration/</a> 참고)\n가장 기본적인 내용인 Site Settings, Site Author등을 설정하고 추가적인 comment 기능이나 navigation 등은 링크된 site들을 보면 자세하게 나와있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># Site Settings</span>\nlocale                   <span class=\"token keyword\">:</span> <span class=\"token string\">\"ko-KR\"</span>\ntitle                    <span class=\"token keyword\">:</span> <span class=\"token string\">\"Mémento\"</span>\ntitle_separator          <span class=\"token keyword\">:</span> <span class=\"token string\">\"-\"</span>\nname                     <span class=\"token keyword\">:</span> <span class=\"token operator\">&amp;</span>name <span class=\"token string\">\"Seung-Kyu Sung\"</span>\ndescription              <span class=\"token keyword\">:</span> <span class=\"token string\">\"A personal website.\"</span>\nurl                      <span class=\"token keyword\">:</span> <span class=\"token string\">\"https://nukeguys.github.io\"</span> <span class=\"token comment\"># the base hostname &amp; protocol for your site e.g. \"https://mmistakes.github.io\"</span>\nbaseurl                  <span class=\"token keyword\">:</span> <span class=\"token comment\"># the subpath of your site, e.g. \"/blog\"</span>\nrepository               <span class=\"token keyword\">:</span> <span class=\"token string\">\"nukeguys/nukeguys.github.io\"</span> <span class=\"token comment\"># GitHub username/repo-name e.g. \"mmistakes/minimal-mistakes\"</span>\n<span class=\"token punctuation\">..</span>.\n<span class=\"token comment\"># Site Author</span>\nauthor:\n  name             <span class=\"token keyword\">:</span> *name\n  avatar           <span class=\"token keyword\">:</span> <span class=\"token string\">\"/assets/images/profile.png\"</span> <span class=\"token comment\"># path of avatar image, e.g. \"/assets/images/bio-photo.jpg\"</span>\n  bio              <span class=\"token keyword\">:</span> <span class=\"token string\">\"Just a developer.\"</span>\n  location         <span class=\"token keyword\">:</span> <span class=\"token string\">\"Seoul, Korea\"</span>\n  email            <span class=\"token keyword\">:</span> <span class=\"token string\">\"nukeguys0@gmail.com\"</span>\n<span class=\"token punctuation\">..</span>.\n<span class=\"token comment\"># Defaults</span>\ndefaults:\n  <span class=\"token comment\"># _posts</span>\n  - scope:\n      path: <span class=\"token string\">\"\"</span>\n      type: posts\n    values:\n      layout: single\n      author_profile: <span class=\"token boolean\">true</span>\n      read_time: <span class=\"token boolean\">true</span>\n      comments: <span class=\"token boolean\">true</span>\n      share: <span class=\"token boolean\">true</span>\n      related: <span class=\"token boolean\">true</span>\n      toc: <span class=\"token boolean\">true</span></code></pre></div>\n<p>기본적인 설정들을 완료했으면, 추가로 취향에 맞도록 theme도 수정 가능하다. 난 글자 크기나 archive 등을 위에 링크된 blog에서 참고해서 수정을 했다. 그 결과가 현재 모습.</p>\n<h2>글 쓰기 (<a href=\"https://jekyllrb-ko.github.io/docs/posts/\">https://jekyllrb-ko.github.io/docs/posts/</a>)</h2>\n<p>Jekyll은 <code class=\"language-text\">_posts</code> 디렉토리에 지정된 형식(<code class=\"language-text\">YEAR-MONTH-DAY-title.MARKUP</code>)으로 이름을 지정해서 작성하면 표시가 된다. 추가로 post외에도 collection을 추가할 수 있고 글 목록에 표시되지 않는 글도 작성할 수 있는 pages도 작성 가능하다. 우선 post를 작성하기 위해 markdown editor를 골라본다.</p>\n<h3>Markdown Editor</h3>\n<p>수 많은 markdown editor가 있다는 걸 새삼스레 알게됐다. 많이는 아니지만 이것저것 살펴보고 후보로 남은 것이 <a href=\"https://atom.io/\">Atom</a>, <a href=\"https://typora.io/\">Typora</a>, <a href=\"http://pad.haroopress.com/\">HarooPad</a> 였다. 기존에 쓰던 text editor인 sublime에서 markdown 잘 되지 않는다고해서 <code class=\"language-text\">Atom</code>으로 함께 갈아타볼까 하다가 무겁다는 말이 있어서 일단은 보류. 이 글을 작성시작하면서 사용한건 <code class=\"language-text\">HarooPad</code>였다. 그리고 결과적으로 계속 사용하기로 했다. <code class=\"language-text\">Typora</code>도 깔끔하고 맘에들었지만, 아직 markdown 익숙하지 않아 code를 분리해서 보고 싶어서 code와 preview가 분리를 일단 선택했다. 이후에 markdown 익숙해지면 <code class=\"language-text\">Typora</code>도 좋은 editor로 사용할 수 있을 것 같다.<br>\n아래는 <code class=\"language-text\">HarooPad</code>로 현재 글을 작성하는 화면.</p>\n<p><img src=\"/assets/images/2018-05-29-haroopad-usage.png\" alt=\"하루패드 작업화면\"></p>\n<h3>Posting</h3>\n<p>초안 기능인 <code class=\"language-text\">draft</code>도 활용할 수 있지만, 바로 글을 작성해 본다.<br>\n<code class=\"language-text\">_posts</code> 디렉토리에 형식에 맞춰 새 파일을 하나 생성한다. 그리고 Jekyll에서는 post에 <a href=\"https://jekyllrb-ko.github.io/docs/frontmatter/\">FrontMatter</a>를 추가할 필요가 있다. 이를 통해 post를 handling하는데 사용한다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">---\nlayout: post\ntitle:  <span class=\"token string\">\"Welcome to Jekyll!\"</span>\ndate:   2015-11-17 16:16:01 -0600\ncategories: jekyll update\n---\n\nYou’ll <span class=\"token function\">find</span> this post <span class=\"token keyword\">in</span> your <span class=\"token variable\"><span class=\"token variable\">`</span>_posts<span class=\"token variable\">`</span></span> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site <span class=\"token keyword\">in</span> many different ways, but the <span class=\"token function\">most</span> common way is to run <span class=\"token variable\"><span class=\"token variable\">`</span>bundle <span class=\"token function\">exec</span> jekyll serve<span class=\"token variable\">`</span></span>, <span class=\"token function\">which</span> launches a web server and auto-regenerates your site when a <span class=\"token function\">file</span> is updated.\n\nTo add new posts, simply add a <span class=\"token function\">file</span> <span class=\"token keyword\">in</span> the <span class=\"token variable\"><span class=\"token variable\">`</span>_posts<span class=\"token variable\">`</span></span> directory that follows the convention <span class=\"token variable\"><span class=\"token variable\">`</span>YYYY-MM-DD-name-of-post.ext<span class=\"token variable\">`</span></span> and includes the necessary front matter. Take a <span class=\"token function\">look</span> at the <span class=\"token function\">source</span> <span class=\"token keyword\">for</span> this post to get an idea about how it works.</code></pre></div>\n<p>layout의 경우 <code class=\"language-text\">_config.yml</code>에서 default로 설정해 두면 일일이 쓸 필요가 없고, 기타 등등을 제외하고 난 <code class=\"language-text\">title</code>, <code class=\"language-text\">tags</code>만 현재 사용한다. 글을 작성하면서 중간중간 확인하고 싶은 경우 <code class=\"language-text\">jekyll serve</code> command를 통해 local에서 직접 확인 할 수 있다. 기본적으로 <code class=\"language-text\">127.0.0.1:4000</code>으로 hosting된다.<br>\n아래처럼 <code class=\"language-text\">--livereload</code>를 option으로 주면 변경내용이 바로 browser에 반영된다. 단 <code class=\"language-text\">_config.yml</code> 같은 경우는 rebuild가 필요해 종료 후 다시 실행해 주어야 한다.\n<img src=\"/assets/images/2018-05-29-jekyll-serve.png\" alt=\"jekyll serve\">\n<img src=\"/assets/images/2018-05-29-local-preview.png\" alt=\"local preview\">\n이제 완료된 post를 commit하고 push해주면 게시되어 확인할 수 있다.(<a href=\"https://nukeguys.github.io\">https://nukeguys.github.io</a>)</p>\n<p>처음 본다면 따라하기 힘들겠지만 어느정도 이런 환경에 익숙하다면 참고된 링크들을 통해 더 많은 것들을 할 수 있을 것이라고 본다. 자세하게 쓰려면 너무 많아질 것 같아 첫 posting을 올려보는 것에 목적을 두고 작성해봤다. 이 글을 시작으로 많지는 않아도 꾸준한 글쓰기를 이어 나갈 수 있었으면 하는 바람이다.</p>\n<h2>Reference</h2>\n<h3>GitHub Pages &#x26; Jekyll</h3>\n<p>GitHub Pages - <a href=\"https://pages.github.com/\">https://pages.github.com/</a><br>\nJekyll - <a href=\"https://jekyllrb-ko.github.io/\">https://jekyllrb-ko.github.io/</a><br>\nJekyll 테마 - <a href=\"http://jekyllthemes.org/\">http://jekyllthemes.org/</a></p>\n<h3>참고</h3>\n<p>kakao 기술 블로그가 GitHub Pages로 간 까닭은 - <a href=\"http://tech.kakao.com/2016/07/07/tech-blog-story/\">http://tech.kakao.com/2016/07/07/tech-blog-story/</a><br>\n오픈튜토리얼즈 - <a href=\"https://opentutorials.org/module/2398/16117\">https://opentutorials.org/module/2398/16117</a><br>\n깃허브 블로그 만들기 - <a href=\"http://recoveryman.tistory.com/321\">http://recoveryman.tistory.com/321</a><br>\nJekyll 블로그 테마 적용하기 - <a href=\"https://junhobaik.github.io/jekyll-apply-theme/\">https://junhobaik.github.io/jekyll-apply-theme/</a><br>\n쉽고 빠르게 수준 급의 GitHub 블로그 만들기 - <a href=\"https://dreamgonfly.github.io/2018/01/27/jekyll-remote-theme.html\">https://dreamgonfly.github.io/2018/01/27/jekyll-remote-theme.html</a><br>\nWindows에서 Github Page와 Jekyll로 블로그 생성하기 - <a href=\"http://hurderella.tistory.com/131\">http://hurderella.tistory.com/131</a>\nJekyll 블로그를 Google 검색엔진에 노출하기 - <a href=\"https://gmlwjd9405.github.io/2017/10/20/include-blog-in-a-GoogleSearchEngine.html%5D\">https://gmlwjd9405.github.io/2017/10/20/include-blog-in-a-GoogleSearchEngine.html</a></p>\n<h3>예제</h3>\n<p>kakao - <a href=\"http://tech.kakao.com/\">http://tech.kakao.com/</a><br>\n우아한형제들 - <a href=\"http://woowabros.github.io/\">http://woowabros.github.io/</a></p>","frontmatter":{"title":"GitHub Pages와 Jekyll로 website 생성","date":"2018.12.29(May) 22:05","tags":["github","github-pages","jekyll","blog"],"description":"블로그 생성기"}}},"pageContext":{"slug":"/2018-05-29-GitHub-Pages와-Jekyll로-website-생성/","previous":null,"next":{"fields":{"slug":"/Python-Study/"},"frontmatter":{"title":"Python Study"}}}}