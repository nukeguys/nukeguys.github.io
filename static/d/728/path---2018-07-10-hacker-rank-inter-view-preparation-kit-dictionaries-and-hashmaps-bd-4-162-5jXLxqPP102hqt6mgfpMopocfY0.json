{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","author":"nukeguys"}},"markdownRemark":{"id":"889b4dec-c846-541a-9667-17917095831b","excerpt":"HackerRank의 Interview Preparation Kit > Dictionaries and Hashmaps의 Medium 이상 문제 Sherlock and Anagrams - medium 문자열 s가 주어지면 s의 substring들의 anagram pair의 수를 계산 (…","html":"<blockquote>\n<p>HackerRank의 Interview Preparation Kit > Dictionaries and Hashmaps의 Medium 이상 문제</p>\n</blockquote>\n<h2>Sherlock and Anagrams - medium</h2>\n<p><code class=\"language-text\">문제요약</code></p>\n<p>문자열 s가 주어지면 s의 substring들의 anagram pair의 수를 계산 (2&#x3C;=|s|&#x3C;=100)</p>\n<p><code class=\"language-text\">Sample Input</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2\nabba\nabcd</code></pre></div>\n<p><code class=\"language-text\">Sample output</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4\n0</code></pre></div>\n<p><code class=\"language-text\">풀이</code></p>\n<p>각 substring을 정렬 후 나타나는 개수를 카운팅. 동일 문자들을 사용한 substring이 n개면, 이 중 2개를 선택하는 경우의 수 만큼의 pair가 존재. n*(n-1)/2</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">sherlockAndAnagrams</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dic <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> length <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> start <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>length<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            ordStr <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>start<span class=\"token operator\">+</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> ordStr <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                dic<span class=\"token punctuation\">[</span>ordStr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                dic<span class=\"token punctuation\">[</span>ordStr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        count <span class=\"token operator\">+=</span> v<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>v<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span>       \n            \n    <span class=\"token keyword\">return</span> count</code></pre></div>\n<h2>Count Triplets - medium</h2>\n<p><code class=\"language-text\">문제요약</code></p>\n<p>n개의 integer배열 arr과 등비 r이 주어지면, (i,j,k) i&#x3C;j,k인 등비수열의 수를 계산</p>\n<p>(1&#x3C;=n&#x3C;=10^5, 1&#x3C;=r&#x3C;=10^9, 1&#x3C;=arr[i]&#x3C;=10^9)</p>\n<p><code class=\"language-text\">Sample Input</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">4 2\n1 2 2 4</code></pre></div>\n<p><code class=\"language-text\">Sample output</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2</code></pre></div>\n<p><code class=\"language-text\">풀이</code></p>\n<p>가능한 수를 전부 계산하다가, 도통 모르겠어서 답을 보고 이해하는데도 오래걸리…</p>\n<p>(a, ar, arr)대신 (a/r, a, a*r)로 접근을 변경하면 r을 한 번만 곱하거나 나누는 것으로 판단할 수 있다.</p>\n<p>arr의 각 수의 count를 계산해서 dictionary에 저장, arr을 각 항목 a마다 a/r과 a*r의 수를 곱해주면 (a/r, a, a*r)  각 a마다 경우의 수가 계산된다.</p>\n<p>r = 1인 경우는 a/r, a, a*r이 모두 같기 때문에, 고려할 필요가 있고 a/r과 a*r의 수를  찾을 dictionary를 별도로 운영하면서 비교하면 해결된다. 자세한 설명은 코드로.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">countTriplets</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    rDic <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    lDic <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token keyword\">in</span> rDic<span class=\"token punctuation\">:</span>\n            rDic<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            rDic<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            \n    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> n <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">:</span>       \n        rDic<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">if</span> n<span class=\"token operator\">%</span>r <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> n<span class=\"token operator\">//</span>r <span class=\"token keyword\">in</span> lDic <span class=\"token operator\">and</span> n<span class=\"token operator\">*</span>r <span class=\"token keyword\">in</span> rDic<span class=\"token punctuation\">:</span>\n                count <span class=\"token operator\">+=</span> lDic<span class=\"token punctuation\">[</span>n<span class=\"token operator\">//</span>r<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rDic<span class=\"token punctuation\">[</span>n<span class=\"token operator\">*</span>r<span class=\"token punctuation\">]</span>\n                \n        <span class=\"token keyword\">if</span> n <span class=\"token keyword\">in</span> lDic<span class=\"token punctuation\">:</span>\n            lDic<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            lDic<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n            \n    <span class=\"token keyword\">return</span> count</code></pre></div>\n<h2>Frequency queries - medium</h2>\n<p><code class=\"language-text\">문제요약</code></p>\n<p>q개의 query가 주어졌을 때, 값에 따라 수행 후 최종 결과 반환 </p>\n<p>(1&#x3C;=q&#x3C;=10^6, 1&#x3C;=x,y,z&#x3C;=10^9, q[i][0] ∈ {1,2,3} ,1&#x3C;=q[i][1]&#x3C;=10^9)</p>\n<p>[1 x] : x 추가</p>\n<p>[2 y] : y 하나 제거</p>\n<p>[3 z] : z개만큼 있는 수가 있으면 1, 없으면 0</p>\n<p><code class=\"language-text\">Sample Input</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">8\n1 5\n1 6\n3 2\n1 10\n1 10\n1 6\n2 5\n3 2</code></pre></div>\n<p><code class=\"language-text\">Sample output</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">0\n1  </code></pre></div>\n<p><code class=\"language-text\">풀이</code></p>\n<p>해당 수를 추가하고 제거한 후 개수를 판단하기 때문에, query에 따라 개수를 저장하고 3이 나오면 개수에 맞는 수가 있는지를 판단한다. 개수를 dictionary에 {수:개수}로 저장하여 판단했으나, timeout.</p>\n<p>{개수:개수에 해당하는 수의 개수} dictionary를 추가로 저장하고 개수의 수가 있는지 판단하는 부분도 O(1)으로 변경</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>queries<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    dic <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    countDic <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span>\n    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> q <span class=\"token keyword\">in</span> queries<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                countDic<span class=\"token punctuation\">[</span>dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n                dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                countDic<span class=\"token punctuation\">[</span>dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n                countDic<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> dic<span class=\"token punctuation\">:</span>\n                countDic<span class=\"token punctuation\">[</span>dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n                dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                countDic<span class=\"token punctuation\">[</span>dic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> countDic <span class=\"token operator\">and</span> countDic<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> result</code></pre></div>","frontmatter":{"title":"HackerRank Interview Preparation Kit > Dictionaries and Hashmaps","date":null,"tags":["python","study","hackerrank","dictionary","hash"],"description":null}}},"pageContext":{"slug":"/2018-07-10-HackerRank-InterViewPreparationKit-Dictionaries-and-hashmaps/","previous":{"fields":{"slug":"/2018-07-05-HackerRank-InterVIewPreparationKit-Sorting/"},"frontmatter":{"title":"HackerRank Interview Preparation Kit > Sort","description":null,"tags":["python","study","hackerrank","sort"]}},"next":{"fields":{"slug":"/2018-07-16-HackerRank-InterviewPreparationKit-Greedy/"},"frontmatter":{"title":"HackerRank Interview Preparation Kit > Greedy","description":null,"tags":["python","study","hackerrank","greedy"]}}}}