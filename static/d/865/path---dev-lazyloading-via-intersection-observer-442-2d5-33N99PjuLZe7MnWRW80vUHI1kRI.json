{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","author":"nukeguys","google_ad_client":"ca-pub-3962171616803555"}},"markdownRemark":{"id":"a0f16012-c364-5a2b-bd70-43616113052f","excerpt":"개요… 기존에 페이지 웹에서 이미지 로딩은 휴리스틱한 방식 -화면에 먼저 나타날 것 같은 부분에 대해서 delayedLoad라는 props를 통해 바로 바로 로딩하거나, 1초 정도 지연시키거나- 으로 처리하고 있었다.\n그러다 최근에 관련된 이슈가 나오면서 delayedLoad…","html":"<h1>개요…</h1>\n<p>기존에 페이지 웹에서 이미지 로딩은 휴리스틱한 방식 -화면에 먼저 나타날 것 같은 부분에 대해서 delayedLoad라는 props를 통해 바로 바로 로딩하거나, 1초 정도 지연시키거나- 으로 처리하고 있었다.\n그러다 최근에 관련된 이슈가 나오면서 delayedLoad를 임시로 모두 처리하지 않도록 했고, 제대로 바꿔야겠다 맘 먹고 있던 참에 기회가 되서 작업을 시작했다.</p>\n<p>실제로 화면에 나타날 때 이미지를 로딩시켜야 하기 때문에 화면에 보이는지를 판단하는게 중요한 부분이다. 이 쪽에 발 들인지가 얼마 되지 않아 우선 다른 곳에서는 어떻게 처리하고 있는지 알 필요가 있었다. 역시나 기대대로 <a href=\"https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/?hl=ko\">구글</a>에 원하는 것들이 잘 설명되어 있었다.\n알게 된 몇 가지 방법들과 결과적으로 intersection observer를 사용해서 react용 lazy loading 이미지 컴포넌트를 만든 과정을 정리해 본다.</p>\n<h1>방법…</h1>\n<h2>getBoundingClientRect() 사용하기</h2>\n<p>.</p>\n<h2>template</h2>\n<h2>intersection observer</h2>\n<h1>참고</h1>","frontmatter":{"title":"react용 lazyloading 이미지 컴포넌트 만들기","date":"2019/03/31 10:35","tags":["react","lazy-loading","intersection-obsever"],"description":"intersectionObserver로 이미지에 lazyloading 적용하기"}}},"pageContext":{"slug":"/dev/lazyloading-via-intersection-observer/","previous":{"fields":{"slug":"/life/i-run/"},"frontmatter":{"title":"나는 달린다."}},"next":null}}