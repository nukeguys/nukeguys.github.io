{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","author":"nukeguys","google_ad_client":"ca-pub-3962171616803555"}},"markdownRemark":{"id":"a0f16012-c364-5a2b-bd70-43616113052f","excerpt":"기존에 페이지 웹에서 이미지 로딩은 휴리스틱한 방식 -화면에 먼저 나타날 것 같은 부분에 대해서 delayedLoad라는 props를 통해 바로 바로 로딩하거나, 1초 정도 지연시키거나- 으로 처리하고 있었다.\n그러다 최근에 관련된 이슈가 나오면서 delayedLoad…","html":"<p>기존에 페이지 웹에서 이미지 로딩은 휴리스틱한 방식 -화면에 먼저 나타날 것 같은 부분에 대해서 delayedLoad라는 props를 통해 바로 바로 로딩하거나, 1초 정도 지연시키거나- 으로 처리하고 있었다.\n그러다 최근에 관련된 이슈가 나오면서 delayedLoad를 임시로 모두 처리하지 않도록 했고, 제대로 바꿔야겠다 맘 먹고 있던 참에 기회가 되서 작업을 시작했다.</p>\n<p>실제로 화면에 나타날 때 이미지를 로딩시켜야 하기 때문에 화면에 보이는지를 판단하는게 중요한 부분이다. 이 쪽에 발 들인지가 얼마 되지 않아 우선 다른 곳에서는 어떻게 처리하고 있는지 알 필요가 있었다. 역시나 기대대로 <a href=\"https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/?hl=ko\">구글</a>에 원하는 것들이 잘 설명되어 있었다.\n알게 된 몇 가지 방법들과 결과적으로 intersection observer를 사용해서 react용 lazy loading 이미지 컴포넌트를 만든 과정을 정리해 본다.</p>\n<h2>방법1. getBoundingClientRect() 사용하기</h2>\n<p>이벤트 핸들러를 사용하기 떄문에 호환성이 가장 좋은 방식으로 <code>getBoundingClientRect()</code>로 영역을 계산해 노출 여부를 판단한다. 하지만 매번 여러 이벤트 핸들러들 해제하는 작업을 처리해야하고, 간단한 계산이지만 화면에 표시되는 이미지가 많은 경우에는 성능상의 이점이 없을 수 도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DOMContentLoaded\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> lazyImages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slice<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img.lazy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> active <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">lazyLoad</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>active <span class=\"token operator\">===</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      active <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        lazyImages<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>lazyImage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lazyImage<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>top <span class=\"token operator\">&lt;=</span> window<span class=\"token punctuation\">.</span>innerHeight <span class=\"token operator\">&amp;&amp;</span> lazyImage<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bottom <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">getComputedStyle</span><span class=\"token punctuation\">(</span>lazyImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>display <span class=\"token operator\">!==</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            lazyImage<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> lazyImage<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>src<span class=\"token punctuation\">;</span>\n            lazyImage<span class=\"token punctuation\">.</span>srcset <span class=\"token operator\">=</span> lazyImage<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>srcset<span class=\"token punctuation\">;</span>\n            lazyImage<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lazy\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            lazyImages <span class=\"token operator\">=</span> lazyImages<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> image <span class=\"token operator\">!==</span> lazyImage<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lazyImages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              document<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scroll\"</span><span class=\"token punctuation\">,</span> lazyLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> lazyLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n              window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orientationchange\"</span><span class=\"token punctuation\">,</span> lazyLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        active <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scroll\"</span><span class=\"token punctuation\">,</span> lazyLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resize\"</span><span class=\"token punctuation\">,</span> lazyLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"orientationchange\"</span><span class=\"token punctuation\">,</span> lazyLoad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>방법2. <template> tag 사용하기</h2>\n<p>HTML tag를 사용하기 때문에 별다른 polyfill 없이 사용 가능하고, <template>을 지원하지\n.</p>\n<h2>방법3. intersection observer</h2>\n<p>.</p>\n<h2>참고</h2>\n<p><a href=\"https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/?hl=ko\">https://developers.google.com/web/fundamentals/performance/lazy-loading-guidance/images-and-video/?hl=ko</a>\n<a href=\"https://developers.google.com/web/updates/2016/04/intersectionobserver\">https://developers.google.com/web/updates/2016/04/intersectionobserver</a>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\">https://developer.mozilla.org/en-US/docs/Web/API/Intersection<em>Observer</em>API</a>\n<a href=\"https://nigayo.github.io/javascript/2015/11/17/template_lazy_loading.html\">https://nigayo.github.io/javascript/2015/11/17/template<em>lazy</em>loading.html</a>\n<a href=\"https://github.com/codepink/codepink.github.com/wiki/%EB%84%88%EB%8A%94-%EB%82%98%EB%A5%BC-%EB%B3%B8%EB%8B%A4:-%EC%A7%80%EC%97%B0-%EB%B0%A9%EB%B2%95,-%EB%A0%88%EC%9D%B4%EC%A7%80-%EB%A1%9C%EB%93%9C%EC%99%80-IntersectionObserver%EC%9D%98-%EB%8F%99%EC%9E%91\">https://github.com/codepink/codepink.github.com/wiki/%EB%84%88%EB%8A%94-%EB%82%98%EB%A5%BC-%EB%B3%B8%EB%8B%A4:-%EC%A7%80%EC%97%B0-%EB%B0%A9%EB%B2%95,-%EB%A0%88%EC%9D%B4%EC%A7%80-%EB%A1%9C%EB%93%9C%EC%99%80-IntersectionObserver%EC%9D%98-%EB%8F%99%EC%9E%91</a>\n<a href=\"https://tech.lezhin.com/2017/07/13/intersectionobserver-overview\">https://tech.lezhin.com/2017/07/13/intersectionobserver-overview</a></p>","frontmatter":{"title":"react용 lazyloading 이미지 컴포넌트 만들기","date":"2019/03/31 10:35","tags":["react","lazy-loading","intersection-obsever"],"description":"intersectionObserver로 이미지에 lazyloading 적용하기"}}},"pageContext":{"slug":"/dev/lazyloading-via-intersection-observer/","previous":{"fields":{"slug":"/life/i-run/"},"frontmatter":{"title":"나는 달린다."}},"next":null}}