{"data":{"site":{"siteMetadata":{"title":"nukeguys blog","author":"nukeguys","google_ad_client":"ca-pub-3962171616803555"}},"markdownRemark":{"id":"ac75ce82-5c06-5bf0-9070-c619a2cf2cba","excerpt":"MS에서도 엣지에 크로미움을 사용한다고 발표한 상황에서, 팀에서도 IE10을 더이상 지원하지 않기 위한 근거로 서비스 접속 대한 브라우저 통계가 필요했다. 가이드를 통해 nginx의 access 로그와  GoAccess…","html":"<p>MS에서도 엣지에 크로미움을 사용한다고 발표한 상황에서, 팀에서도 IE10을 더이상 지원하지 않기 위한 근거로 서비스 접속 대한 브라우저 통계가 필요했다.<br>\n가이드를 통해 nginx의 access 로그와 <a href=\"https://goaccess.io/\">GoAccess</a>에 대해 알게 되었고 이를 사용하여 간단하게 로그 분석을 해봤다.\n단순하게 사용만 해본 터라 깊이는 없지만 오랜만에 사용해본 쉘 명령어도 되짚어 볼 겸 간단하게 정리해 본다.</p>\n<p>우선 서버에서 원격으로 접근 가능한 위치에 받아올 로그 파일을 미리 복사해 두고 scp를 통해 내려 받아 압축을 해제한다. (회사에서는 일주일 단위로 로그를 압축하여 백업하고 있었고, 실 서비스 서버이므로 로컬 PC로 로그파일을 내려 받아서 진행했다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># scp로 로그파일 내려받기</span>\n<span class=\"token function\">scp</span> 계정@호스트:파일경로 저장할파일이름   <span class=\"token comment\"># 원하는 파일만</span>\n<span class=\"token function\">scp</span> -r 계정@호스트:폴더경로 ./ <span class=\"token comment\"># 폴더 통째로</span>\n\n<span class=\"token comment\"># gzip/gunzip으로 압축 해제하기</span>\n<span class=\"token function\">gzip</span> -d access.log-xxxxxxxx.gz <span class=\"token comment\"># (gunzip access.log-xxxxxxxx.gz) 원하는 파일만</span>\ngunzip -r ./accesslog <span class=\"token comment\"># 폴더의 압축파일들을 한 번에 해제</span></code></pre></div>\n<p>로그파일이 준비됐으니 GoAccess를 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> goaccess</code></pre></div>\n<p>GoAccess로 분석을 하기위해 로그파일의 포맷을 설정파일에 명시해야 한다. <code>time-format</code>, <code>date-format</code>, <code>log-format</code> 세 가지만 설정 해주고, 로그가 표준화된 형식일 경우 실행시에 옵션으로 넣어줘도 되는 듯 하다.<br>\n미리 정의된 형식이 주석으로 있으니 해제하여 사용하거나 없으면 맞게 작성해주면 된다. 내 PC의 설정파일의 위치는 <code>/usr/local/Cellar/goaccess/1.2_1/etc/goaccess.conf</code>였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">######################################</span>\n<span class=\"token comment\"># Time Format Options (required)</span>\n<span class=\"token comment\">######################################</span>\ntime-format %H:%M:%S\n\n<span class=\"token comment\">######################################</span>\n<span class=\"token comment\"># Date Format Options (required)</span>\n<span class=\"token comment\">######################################</span>\ndate-format %d/%b/%Y\n\n<span class=\"token comment\">######################################</span>\n<span class=\"token comment\"># Log Format Options (required)</span>\n<span class=\"token comment\">######################################</span>\nlog-format %h - %^ <span class=\"token punctuation\">[</span>%d:%t %^<span class=\"token punctuation\">]</span>  <span class=\"token string\">\"%r\"</span> %s %b <span class=\"token string\">\"%R\"</span> <span class=\"token string\">\"%u\"</span> %T <span class=\"token string\">\"%^\"</span></code></pre></div>\n<p>GoAccess를 사용하기 전에 필요한 로그를 가공 할 필요가 있었다.\n<a href=\"https://page.kakao.com\">카카오페이지 웹</a>의 경우 PC와 모바일 버전이 다르고(당연히), 모바일의 경우 앱 내에서 호출하는 경우가 있어 제외시켜야 했다. 추가로 리다이렉션(응답코드 30X) 되는 경우도 로그가 중복이기 때문에 제외 시켰다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 앱에서 호출하는 경우 userAgent에 KakaoPage가 포함된다.</span>\n<span class=\"token function\">sed</span> <span class=\"token string\">'/KaKaoPage/d'</span> access.log-xxxxxxxx <span class=\"token operator\">></span> 1_only_web\n<span class=\"token comment\"># 응답코드 30X인 레코드를 제외시킨다.(더 정확하게 할 수 있겠지만 이 정도만 해도 충분했다.)</span>\n<span class=\"token function\">sed</span> <span class=\"token string\">'/\" 30. /d'</span> 1_only_web <span class=\"token operator\">></span> 2_delete_redirect</code></pre></div>\n<p>GoAccess를 실행시켜 로그 파일을 분석하고 결과를 html파일로 만든다. (결과 화면은 <a href=\"https://goaccess.io/\">https://goaccess.io/</a>를 참고)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">goaccess 2_delete_redirect -a -o 2_delete_redirect.html</code></pre></div>\n<p>결과를 대략 정리해 보면 크롬이 대부분을 차지했고, IE와 엣지는 통틀어 3%가 되지 않았다. IE10은 약 20명 내외였으며 서버 수를 고려한다 해도 절대치가 미미한 수준이었다. 아마도 이제 IE10 지원에 대한 고민은 하지 않아도 될 듯 하다.</p>","frontmatter":{"title":"javascript에서 switch문 제거하기","date":"2019/02/10 11:58","tags":["TIL","javascript","functional programming","ocp"],"description":"closure와 함수형 프로그래밍 그리고 OCP"}}},"pageContext":{"slug":"/dev/eliminate-switch-in-js/","previous":{"fields":{"slug":"/life/2019-as-what-i-say/"},"frontmatter":{"title":"말하는 대로 기록하는 대로, 2019년 목표"}},"next":null}}