{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/Post.tsx","webpack:///./src/components/PosterList.tsx"],"names":["BlogIndex","render","_this$props$data","this","props","data","site","allMarkdownRemark","posts","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","layout_index__WEBPACK_IMPORTED_MODULE_2__","siteMetadata","showIntro","components_Seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","components_PosterList__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","Post","post","frontmatter","fields","slug","react_default","id","className","date","description","tags","map","tag","key","PosterList","Fragment","_ref","node","gatsby_browser_entry","to","components_Post"],"mappings":"wMAeMA,4FACJC,OAAA,WAAS,IAAAC,EAC6BC,KAAKC,MAAMC,KAAvCC,EADDJ,EACCI,KAAMC,EADPL,EACOK,kBACRC,EAAQD,EAAoBA,EAAkBE,MAAQ,GAE5D,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,aAAcR,EAAKQ,aAAcC,WAAW,GAClDL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,MAAM,WACNC,SAAU,yCAEZR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYX,MAAOA,SAXHY,IAAMC,WAiBfrB,YAER,IAAMsB,EAAS,2FCAPC,4FA1BbtB,OAAA,WAAS,IACCuB,EAASrB,KAAKC,MAAdoB,KACFP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACEC,EAAAjB,EAAAC,cAAA,OAAKiB,GAAG,OAAOC,UAAU,sBACvBF,EAAAjB,EAAAC,cAAA,OAAKkB,UAAU,uDACZb,GAEHW,EAAAjB,EAAAC,cAAA,OAAKkB,UAAU,2CACZN,EAAKC,YAAYM,MAEpBH,EAAAjB,EAAAC,cAAA,OAAKkB,UAAU,sCACZN,EAAKC,YAAYO,aAEpBJ,EAAAjB,EAAAC,cAAA,OAAKkB,UAAU,QACZN,EAAKC,YAAYQ,KAAKC,IAAI,SAAAC,GAAG,OAC5BP,EAAAjB,EAAAC,cAAA,QAAMwB,IAAKD,EAAKL,UAAU,OAA1B,IACIK,WAlBGd,aCGbgB,4FACJpC,OAAA,WAAS,IACCO,EAAUL,KAAKC,MAAfI,MAER,OACEoB,EAAAjB,EAAAC,cAAAgB,EAAAjB,EAAA2B,SAAA,KACG9B,EAAM0B,IAAI,SAAAK,GAAc,IAAXC,EAAWD,EAAXC,KACZ,OACEZ,EAAAjB,EAAAC,cAAA,OAAKkB,UAAU,WAAWM,IAAKI,EAAKd,OAAOC,MACzCC,EAAAjB,EAAAC,cAAC6B,EAAA,KAAD,CAAMX,UAAU,WAAWY,GAAIF,EAAKd,OAAOC,MACzCC,EAAAjB,EAAAC,cAAC+B,EAAD,CAAMnB,KAAMgB,aAVHpB,IAAMC,WAoBhBgB","file":"component---src-pages-index-tsx-245a7c33ca48fd5894b4.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from 'layout/index';\nimport SEO from 'components/Seo';\nimport { IPageProps } from '../common';\nimport { ISite, IAllMarkdownRemark } from 'type';\nimport PosterList from 'components/PosterList';\n\ninterface IProps extends IPageProps {\n  data: {\n    site: ISite;\n    allMarkdownRemark: IAllMarkdownRemark;\n  };\n}\n\nclass BlogIndex extends React.Component<IProps> {\n  render() {\n    const { site, allMarkdownRemark } = this.props.data;\n    const posts = allMarkdownRemark ? allMarkdownRemark.edges : [];\n\n    return (\n      <Layout siteMetadata={site.siteMetadata} showIntro={true}>\n        <SEO\n          title=\"nuKeguyS\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <PosterList posts={posts} />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { IMarkdownRemark } from 'type';\n\ninterface IProps {\n  post: IMarkdownRemark;\n}\n\nclass Post extends Component<IProps> {\n  render() {\n    const { post } = this.props;\n    const title = post.frontmatter.title || post.fields.slug;\n    return (\n      <div id=\"post\" className=\"has-text-grey-dark\">\n        <div className=\"has-text-weight-semibold is-size-4 is-size-5-mobile\">\n          {title}\n        </div>\n        <div className=\"is-uppercase is-size-7 is-size-7-mobile\">\n          {post.frontmatter.date}\n        </div>\n        <div className=\"summary is-size-6 is-size-6-mobile\">\n          {post.frontmatter.description}\n        </div>\n        <div className=\"tags\">\n          {post.frontmatter.tags.map(tag => (\n            <span key={tag} className=\"tag\">\n              #{tag}\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { IPageProps } from '../common';\nimport { INode } from 'type';\nimport Post from 'components/Post';\n\nexport interface IProps {\n  posts: INode[];\n}\n\nclass PosterList extends React.Component<IProps> {\n  render() {\n    const { posts } = this.props;\n\n    return (\n      <>\n        {posts.map(({ node }) => {\n          return (\n            <div className=\"postItem\" key={node.fields.slug}>\n              <Link className=\"postLink\" to={node.fields.slug}>\n                <Post post={node} />\n              </Link>\n            </div>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default PosterList;\n"],"sourceRoot":""}