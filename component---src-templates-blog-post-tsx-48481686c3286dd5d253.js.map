{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["BlogPostTemplate","render","_this$props","this","props","_this$props$data","data","post","markdownRemark","site","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout_index__WEBPACK_IMPORTED_MODULE_3__","siteMetadata","showIntro","_components_Seo__WEBPACK_IMPORTED_MODULE_4__","title","frontmatter","description","excerpt","id","className","date","tags","map","tag","key","dangerouslySetInnerHTML","__html","html","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery"],"mappings":"wMAcMA,4FACJC,OAAA,WAAS,IAAAC,EAIHC,KAAKC,MAJFC,EAAAH,EAELI,KAAwBC,EAFnBF,EAEGG,eAAsBC,EAFzBJ,EAEyBI,KAFzBC,EAAAR,EAGLS,YAAeC,EAHVF,EAGUE,SAAUC,EAHpBH,EAGoBG,KAG3B,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,aAAcT,EAAKS,aAAcC,WAAW,GAClDL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,MAAOd,EAAKe,YAAYD,MAAOE,YAAahB,EAAKiB,UACtDV,EAAAC,EAAAC,cAAA,WAASS,GAAG,aACVX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,uDACZnB,EAAKe,YAAYD,OAEpBP,EAAAC,EAAAC,cAAA,OAAKU,UAAU,8BACZnB,EAAKe,YAAYK,MAEpBb,EAAAC,EAAAC,cAAA,OAAKU,UAAU,sCACZnB,EAAKe,YAAYC,aAEpBT,EAAAC,EAAAC,cAAA,OAAKU,UAAU,QACZnB,EAAKe,YAAYM,KAAKC,IAAI,SAAAC,GAAG,OAC5BhB,EAAAC,EAAAC,cAAA,QAAMe,IAAKD,EAAKJ,UAAU,OAA1B,IACII,MAIRhB,EAAAC,EAAAC,cAAA,WACEU,UAAU,UACVM,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QAE1CpB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,SACbZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,cACZd,GACCE,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CAAMC,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAApC,KACK3B,EAASU,YAAYD,QAI9BP,EAAAC,EAAAC,cAAA,OAAKU,UAAU,eACZb,GACCC,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CAAMC,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKS,YAAYD,MADpB,cAzCemB,IAAMC,WAqDtBzC,YAER,IAAM0C,EAAS","file":"component---src-templates-blog-post-tsx-48481686c3286dd5d253.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../layout/index';\nimport SEO from '../components/Seo';\nimport { IPageProps } from '../common';\nimport { ISite, IMarkdownRemark } from '../type';\n\ninterface IProps extends IPageProps {\n  data: {\n    site: ISite;\n    markdownRemark: IMarkdownRemark;\n  };\n}\n\nclass BlogPostTemplate extends React.Component<IProps> {\n  render() {\n    const {\n      data: { markdownRemark: post, site },\n      pageContext: { previous, next },\n    } = this.props;\n\n    return (\n      <Layout siteMetadata={site.siteMetadata} showIntro={false}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <section id=\"blog-post\">\n          <div className=\"has-text-weight-semibold is-size-3 is-size-4-mobile\">\n            {post.frontmatter.title}\n          </div>\n          <div className=\"is-size-7 is-size-7-mobile\">\n            {post.frontmatter.date}\n          </div>\n          <div className=\"summary is-size-6 is-size-6-mobile\">\n            {post.frontmatter.description}\n          </div>\n          <div className=\"tags\">\n            {post.frontmatter.tags.map(tag => (\n              <span key={tag} className=\"tag\">\n                #{tag}\n              </span>\n            ))}\n          </div>\n          <article\n            className=\"content\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n          <nav className=\"level\">\n            <div className=\"level-left\">\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </div>\n            <div className=\"level-right\">\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </div>\n          </nav>\n        </section>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY/MM/DD HH:mm\")\n        tags\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}